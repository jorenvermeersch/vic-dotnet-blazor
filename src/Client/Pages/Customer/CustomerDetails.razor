@page "/customer/{id:long}"
@layout MainLayout
@namespace Shared
@using VirtualMachine
@using customer
@inject ICustomerService customerService
@inject IVirtualMachineService virtualMachineService
@attribute [Authorize]
@inject NavigationManager Navigation

<PageTitle>Klant [customer name] Details</PageTitle>

<div class="context-menu" >
    <div class="context-items" style="display: flex">
        <span style="flex: 1; cursor: pointer; display: flex; gap: 10px" class="small_title" @onclick="NavigateBack"><i class="fa-solid fa-arrow-left" ></i>
            <span>Terug</span>
        </span>
        <span>
            <Button Text="Beheren" />
        </span>
    </div>
</div>
<div class="three-column-layout">
    <div class="one-third">
    <DataCard Entries="@_username" />

    <Title Text="Algemeen" />
    <DataCard Entries="@_general" />

    <Title Text="Contactgegevens" />
    <DataCard Entries="@_contactInformation" />
    @if(_backupContactInformation.ContainsKey("Naam")){
            <DataCard Entries="@_backupContactInformation" />
    }
    
    </div>
<div class="two-thirds">
    <Title Text="Virtuele machines" />
       
            @if (virtualMachines.Any())
            {
            <div class="two-columns-container">
                <div>
                @foreach (var vm in virtualMachines.Take(5))
                {
                    <EntityCard Value=@vm.FQDN Active=@(vm.Status == Status.Requested) Href=@string.Concat("virtual-machine/", vm.Id) />
                }
                </div>
                <div>
                    @foreach (var vm in virtualMachines.Skip(5).Take(5))
                    {
                        <EntityCard Value=@vm.FQDN Active=@(vm.Status == Status.Requested) Href=@string.Concat("virtual-machine/", vm.Id) />
                    }
                </div>
            </div>
            <PageSelector OnClick="@ClickHandler" NumberOfPages=@totalPages SelectedPage="@selectedPage" />
            }
            else
            {
                <NoVmMsg Type="@customer.CustomerType.ToString()" />
            }
    </div>
</div>





@code {
    private CustomerDto.Details? customer;
    private IEnumerable<VirtualMachineDto.Index>? virtualMachines;
    int offset = 0;
    int totalVirtualMachines = 0;
    int totalPages = 0;
    int selectedPage = 1;

    [Parameter] public long Id { get; set; }

    private Dictionary<string, string> _username = new();
    private Dictionary<string, string> _general = new();
    private Dictionary<string, string> _contactInformation = new();
    private Dictionary<string, string> _backupContactInformation = new();

    protected override async Task OnInitializedAsync()
    {
        customer = await customerService.GetDetailAsync(Id);
        virtualMachines = await virtualMachineService.GetVirtualMachinesByUserId(Id, offset);
        totalVirtualMachines = virtualMachines.Count();
        totalPages = (totalVirtualMachines / 10) + 1;

        _username.Add("Naam", string.Concat(customer.ContactPerson.Firstname, " ", customer.ContactPerson.Lastname));

        _general.Add("Klant type", customer.CustomerType.ToString());
        if(customer.CustomerType==CustomerType.Intern){
            _general.Add("Instituut", customer.Institution.ToString());
            _general.Add("Departement", customer.Department);
            _general.Add("Opleiding", customer.Education);
            
        }else{
            _general.Add("Naam", customer.CompanyName);
            _general.Add("Type", customer.CompanyType);
        }
        

        _contactInformation.Add("Naam", string.Concat(customer.ContactPerson.Firstname, " ", customer.ContactPerson.Lastname));
        _contactInformation.Add("E-mailadres", customer.ContactPerson.Email);
        _contactInformation.Add("Telefoonnummer", customer.ContactPerson.Phonenumber);

        if(customer.BackupContactPerson.Firstname==""){
            _backupContactInformation.Add("Naam", string.Concat(customer.BackupContactPerson.Firstname, " ", customer.BackupContactPerson.Lastname));
            _backupContactInformation.Add("E-mailadres", customer.BackupContactPerson.Email);
            _backupContactInformation.Add("Telefoonnummer", customer.BackupContactPerson.Phonenumber);
        } 
    } 

    private void NavigateBack()
    {
        Navigation.NavigateTo("customer/list");
    }

    async Task ClickHandler(int pageNr)
    {
        offset = (pageNr - 1) * 10;
        virtualMachines = await virtualMachineService.GetVirtualMachinesByUserId(customer.Id, offset);
        selectedPage = pageNr;
    }
}
