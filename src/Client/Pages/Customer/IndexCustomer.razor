@page "/customer/list"
@layout MainLayout
@namespace Shared
@using Shared.customer
@inject IHostService customerService
@attribute [Authorize]

<div class="context-menu">
    <Label Text="Toevoegen" />
    <Button Text="Klant" Href="/customer/add" />
</div>
<div class="three-column-layout">
    <div class="one-third">
        <Title Text="Filteropties" />
        <div class="filterbuttonarea">
            <Button Text="Filteren" />
        </div>
        <Searchbar />
        <Input Type="Input.InputType.SELECT" Label="Type" PlaceHolder="Alle types"/>
    </div>
    <div class="two-thirds">
        <Title Text="Alle klanten" />
        <div class="two-columns-container">
                <div>
                @foreach (var customer in customers.Take(10))
                {
                    <EntityCard Value="@customer.Name" Active="@true" Href=@string.Concat("customer/", customer.Id)></EntityCard>
                }
                </div>
                <div>
                @foreach (var customer in customers.Skip(10).Take(10))
                {
                    <EntityCard Value="@customer.Name" Active="@true" Href=@string.Concat("customer/", customer.Id)></EntityCard>
                }
                </div>

        </div>
        <PageSelector OnClick="@ClickHandler" NumberOfPages=@totalPages SelectedPage="@selectedPage"/>

    </div>
</div>

@code {

    private IEnumerable<CustomerDto.Index>? customers;
    int offset = 0;
    int totalCustomers = 0;
    int totalPages = 0;
    int selectedPage = 1;
    protected override async Task OnInitializedAsync()
    {
        customers = await customerService.GetIndexAsync(offset);
        totalCustomers = await customerService.GetCount();
        totalPages = (totalCustomers / 20)+1;
    }

    async Task ClickHandler(int pageNr)
    {
        offset = (pageNr-1) * 20;
        customers = await customerService.GetIndexAsync(offset);
        selectedPage = pageNr;
    }
}
