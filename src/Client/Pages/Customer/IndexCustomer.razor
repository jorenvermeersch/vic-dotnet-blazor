@page "/customer/list"
@layout MainLayout
@namespace Shared
@inject ICustomerService customerService
@attribute [Authorize]

<div class="context-menu">
    <Label Text="Toevoegen" />
    <Button Text="Klant" Href="/customer/add" />
</div>
<div class="three-column-layout">
    <div class="one-third">
        <Title text="Filteropties" />
        <div class="filterbuttonarea">
            <Button Text="Filteren" />
        </div>
        <Searchbar />
        <Input Type="Input.InputType.SELECT" Label="Type" PlaceHolder="Alle types"/>
    </div>
    <div class="two-thirds">
        <Title text="Alle klanten" />
        <div class="two-columns-container">
           <!--<div>
                @foreach (KeyValuePair<string, bool> entry in _vms)
                {
                        <EntityCard Value="@entry.Key" Active="@entry.Value" />
                }
            </div>
            <div>
                @foreach (KeyValuePair<string, bool> entry in _vms)
                {
                        <EntityCard Value="@entry.Key" Active="@entry.Value" />
                }
            </div>--> 
            <div>
                @foreach(var customer in customers){
                    <EntityCard Value="@customer.CustomerName" Active="@true" Href=@string.Concat("customer/", customer.Id)></EntityCard>
                }
            </div>

        </div>
        <PageSelector />




    </div>
</div>

@code {
    
    private IEnumerable<CustomerDto.Index> customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await customerService.GetIndexAsync();
    }
    /*
    private Dictionary<string, bool> _vms = new();

    protected override void OnInitialized()
    {
        Random random = new();
        for (int i = 0; i < 10; i++)
        {
            _vms.Add($"[user]#{i}", random.Next(2) == 1);
        }
    }*/
}
