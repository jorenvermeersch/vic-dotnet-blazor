@page "/virtual-machine/list"
@namespace Shared
@using Shared.VirtualMachine
@inject IVirtualMachineService VirtualMachineService
@layout MainLayout
@attribute [Authorize]

<div class="context-menu">
    <Label Text="Toevoegen" />
    <Button Href="/virtual-machine/add" Text="Virtuele machine" />
    <Button Href="/virtual-machine/add" Text="Host" />
</div>
<div class="three-column-layout">
    <div class="one-third">
        <Title text="Filteropties" />
        <div class="filterbuttonarea">
            <Button Text="Filteren" />
        </div>
        <Searchbar />
    </div>
    <div class="two-thirds">
        <Title text="Alle virtuele machines" />
        <div class="two-columns-container">
            <div>
                @foreach (var vm in virtualMachines.Take(10))
                {
                        <EntityCard Value="@vm.FQDN" Active="@vm.IsActive" Href=@string.Concat("virtual-machine/", vm.Id)></EntityCard>
                }
            </div>
            <div>
                @foreach (var vm in virtualMachines.Skip(10).Take(10))
                {
                    <EntityCard Value="@vm.FQDN" Active="@vm.IsActive" Href=@string.Concat("virtual-machine/", vm.Id)></EntityCard>
                }
            </div>

        </div>
        <PageSelector OnClick="@ClickHandler" NumberOfPages=@totalPages SelectedPage="@selectedPage"/>




    </div>
</div>

@code {
    private IEnumerable<VirtualMachineDto.Index> virtualMachines;
    int offset = 0;
    int totalVirtualMachines = 0;
    int totalPages;
    int selectedPage = 1;

    protected override async Task OnInitializedAsync()
    {
        virtualMachines = await VirtualMachineService.GetIndexAsync(offset);
        totalVirtualMachines = await VirtualMachineService.GetCount();
        totalPages = (totalVirtualMachines / 20) + 1;
    }

    async Task ClickHandler(int pageNr)
    {
        offset = (pageNr - 1) * 20;
        virtualMachines = await VirtualMachineService.GetIndexAsync(offset);
        selectedPage = pageNr;
    }

}
