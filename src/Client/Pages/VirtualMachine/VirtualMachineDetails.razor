@page "/virtual-machine/{id:long}"
@layout MainLayout
@namespace Shared
@using VirtualMachine
@inject IVirtualMachineService VirtualMachineService
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Virtual Machine @virtualMachine.Name  Details</PageTitle>

<div class="context-menu" >
    <div class="context-items" style="display: flex">
        <span style="flex: 1; cursor: pointer; display: flex; gap: 10px" class="small_title" @onclick="NavigateBack"><i class="fa-solid fa-arrow-left" ></i>
            <span>Terug</span>
        </span>
        <StatusIndicator State="@virtualMachine.Status.ToString()" />
        <span>
            <Button Text="Beheren" />
        </span>
    </div>
</div>

<div class="three-column-layout">
    <div class="one-third">
    <DataCard Entries="@_defaultInformation" />

    <Title Text="Specificaties en configuratie" />
    <DataCard Entries="@_specs" />
    <DataCard Entries="@_config" />

    <Title Text="Beschikbaarheid en back-ups" />
    <DataCard Entries="@_available" />
    <DataCard Entries="@_backups" />

</div>
<div class="one-third">
    <Title Text="Logingegevens" />
    @foreach(var data in _logindata){
            <DataCard Entries="@data" />
    }
     
</div>
<div class="one-third">
    <Title Text="Aanvrager" />
    <DataCard Entries="@_requester" />

    <Title Text="Gebruiker" />
    <DataCard Entries="@_user" />

    <Title Text="Verantwoordelijken" />
    <DataCard Entries="@_personincharge" />
</div>
</div>




@code {
    private VirtualMachineDto.Details? virtualMachine;

    [Parameter] public long Id { get; set; }

    private Dictionary<string, string> _defaultInformation = new();
    private Dictionary<string, string> _specs = new();
    private Dictionary<string, string> _config = new();
    private Dictionary<string, string> _available = new();
    private Dictionary<string, string> _backups = new();
    //private Dictionary<string, string> _logindata = new();
    private Dictionary<string, string> _user = new();
    private Dictionary<string, string> _requester = new();
    private Dictionary<string, string> _personincharge = new();

    private List<Dictionary<string, string>> _logindata = new();
    private Dictionary<string, string> _host = new();



    protected override async Task OnInitializedAsync()
    {
        virtualMachine = await VirtualMachineService.GetDetailAsync(Id);

        _defaultInformation.Add("Naam", virtualMachine.Name);
        _defaultInformation.Add("FQDN", virtualMachine.FQDN);
        _defaultInformation.Add("Hostnaam", virtualMachine?.Host?.Name);

        _config.Add("Mode", virtualMachine.Mode);
        _config.Add("Template", virtualMachine.Template);
        _config.Add("Reden", virtualMachine.Reason);

        _specs.Add("vCPUs", virtualMachine.Specification.Processors.ToString());
        _specs.Add("Geheugen", virtualMachine.Specification.Memory.ToString());
        _specs.Add("Opslag", virtualMachine.Specification.Storage.ToString());

        //if (virtualMachine.Availabilities.Count>1){
        //    _available.Add("Beschikbaarheid", string.Join(", ", virtualMachine.Availabilities));
        //}
           
        _available.Add("Backups", virtualMachine.BackupFrequenty);

        _backups.Add("Aangevraagd op", virtualMachine.ApplicationDate.ToShortDateString());
        _backups.Add("Start", virtualMachine.TimeSpan.StartDate.ToShortDateString());
        _backups.Add("Einde", virtualMachine.TimeSpan.EndDate.ToShortDateString());

        _personincharge.Add("Opgezet door", virtualMachine.Account?.Firstname + " " + virtualMachine.Account?.Lastname);
        _personincharge.Add("Ondersteuning", virtualMachine.Account?.Firstname + " " + virtualMachine.Account?.Lastname);

        _user.Add("Naam", virtualMachine.User?.Name);
        _user.Add("Email", virtualMachine.User?.Email);

        _requester.Add("Naam", virtualMachine.Requester?.Name);
        _requester.Add("Email", virtualMachine.Requester?.Email);

        @if (virtualMachine.Ports.Any()){
            _config.Add("Externe Toegang", string.Join(", ", virtualMachine.Ports.Select(p => p.Number)));

        }
        
        foreach(var credential in virtualMachine.Credentials){
            Console.WriteLine(credential.Username);
            _logindata.Add(new Dictionary<string, string>(){
                {"Gebruikersnaam", credential.Username},
                {"Rol", credential.Role}
            });
        }

        _host.Add("Naam", virtualMachine.Host.Name);
    }
    private void NavigateBack()
    {
        Navigation.NavigateTo("virtual-machine/list");
    }
}
