@page "/virtual-machine/{id:long}"
@layout MainLayout
@namespace Shared
@using Shared.VirtualMachine
@inject IVirtualMachineService VirtualMachineService
@attribute [Authorize]

<PageTitle>Virtual Machine @virtualMachine.Name  Details</PageTitle>

<div class="context-menu">
    <div style="display: flex">
        <span style="flex: 1; cursor: pointer; display: flex; gap: 10px" class="small_title"><i class="fa-solid fa-arrow-left"></i><span>Terug</span></span>
    </div>
</div>

<div class="three-column-layout">
    <div class="one-third">
    <DataCard Entries="@_defaultInformation" />

    <Title text="Specificaties en configuratie" />
    <DataCard Entries="@_specs" />
    <DataCard Entries="@_config" />

    <Title text="Beschikbaarheid en back-ups" />
    <DataCard Entries="@_available" />
    <DataCard Entries="@_backups" />
</div>
<div class="one-third">

    <div style="display: flex; align-items: flex-end; height: 50px;">
        <span style="flex: 1">
            <Button Text="Actief" />
        </span>
    </div>

    <Title text="Logingegevens" />
    @for(int i = 0; i < 3; i++){
        <DataCard Entries="@_logindata" />
    }
</div>
<div class="one-third">
    <Title text="Aanvrager" />
    <DataCard Entries="@_requester" />

    <Title text="Gebruiker" />
    <DataCard Entries="@_user" />

    <Title text="Verantwoordelijken" />
    <DataCard Entries="@_personincharge" />
</div>
</div>




@code {
    private VirtualMachineDto.Details? virtualMachine;

    [Parameter] public long Id { get; set; }

    private Dictionary<string, string> _defaultInformation = new();
    private Dictionary<string, string> _specs = new();
    private Dictionary<string, string> _config = new();
    private Dictionary<string, string> _available = new();
    private Dictionary<string, string> _backups = new();
    private Dictionary<string, string> _logindata = new();
    private Dictionary<string, string> _user = new();
    private Dictionary<string, string> _requester = new();
    private Dictionary<string, string> _personincharge = new();

    protected override async Task OnInitializedAsync()
    {
        virtualMachine = await VirtualMachineService.GetDetailAsync(Id);

        _defaultInformation.Add("FQDN", virtualMachine.FQDN);
        _defaultInformation.Add("Host", virtualMachine.Name);

        _config.Add("Mode", virtualMachine.Mode);
        _config.Add("Template", virtualMachine.Template);
        _config.Add("Reden", virtualMachine.Reason);

        _specs.Add("vCPUs", virtualMachine.Processors.ToString());
        _specs.Add("Geheugen", virtualMachine.Memory.ToString());
        _specs.Add("Opslag", virtualMachine.Storage.ToString());

        _available.Add("Beschikbaarheid", string.Join(", ",virtualMachine.Availabilities));
        _available.Add("Backups", virtualMachine.BackupFrequenty);

        _backups.Add("Aangevraagd op", virtualMachine.ApplicationDate.ToShortDateString());
        _backups.Add("Start", virtualMachine.StartDate.ToShortDateString());
        _backups.Add("Einde", virtualMachine.EndDate.ToShortDateString());

        _personincharge.Add("Opgezet door", virtualMachine.Account.Name);
        _personincharge.Add("Ondersteuning", virtualMachine.Account.Name);

        _user.Add("Naam", virtualMachine.User.Name);
        _user.Add("Email", virtualMachine.User.Email);

        _requester.Add("Naam", virtualMachine.Requester.Name);
        _requester.Add("Email", virtualMachine.Requester.Email);

        _config.Add("Externe Toegang", string.Join(", ", virtualMachine.Ports.Select(p=>p.Number)));
    }
    protected override void OnInitialized()
    {
        _logindata.Add("Gebruikersnaam", "admin");
        _logindata.Add("Wachtwoord", "*********");
    }
}
