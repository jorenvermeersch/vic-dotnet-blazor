@page "/host/add"
@using System.ComponentModel.DataAnnotations
@layout NoGlobalSearchLayout
@namespace Shared
@using Host
@using Specification
@inject IHostService hostService
@inject NavigationManager Navigation

@attribute [Authorize(Roles = "Master, Administrator")]

<PageTitle>Host Toevoegen</PageTitle>

<EditForm @ref="editForm" Model="@hostModel">
    <div class="context-menu">
        <span class="context-menu-label">Host Toevoegen</span>
        <Button Text="Toevoegen" OnClick="@HandleValidSubmit" />
    </div>
    <DataAnnotationsValidator />
    <div class="three-column-layout">
        <div class="one-third">
            <Title Text="Algemene informatie" />
            <AddInput Type="@Input.InputType.TEXT" Label="Naam" Required="@true" @bind-Value="hostModel.Name" For="@(()=>hostModel.Name)" />
            <AddInput Type="@Input.InputType.TEXT" Label="Vcpu" Required="@true" @bind-Value="hostModel.Processors" For="@(()=>hostModel.Processors)" />
            
            <AddInput Type="@Input.InputType.TEXT" Label="Opslag" Required="@true" @bind-Value="hostModel.Storage" For="@(()=>hostModel.Storage)" />
            <AddInput Type="@Input.InputType.TEXT" Label="Geheugen" Required="@true" @bind-Value="hostModel.Memory" For="@(()=>hostModel.Memory)" />
            
        </div>
        <div class="one-third" ></div>
        <div class="one-third" ></div>
    </div>
</EditForm>

@code {
    private EditForm? editForm { get; set; } = new();
    private Host hostModel { get; set; } = new();

    private async void HandleValidSubmit(){
        HostDto.Details host = new();
        SpecificationDto specification = new();
        if (editForm.EditContext.Validate())
        {
            host.Name = hostModel.Name.Trim();

            specification.Processors = Convert.ToInt32(hostModel.Processors);
            specification.Memory = Convert.ToInt32(hostModel.Memory.Trim());
            specification.Storage = Convert.ToInt32(hostModel.Storage.Trim());

            host.Specifications = specification;


            HostDto.Details newHost = await hostService.Add(host);
            Navigation.NavigateTo("host/" + newHost.Id);
        }
        
    }

    public class Host{
        [Required]
        public string Name { get; set; }
        [Required]
        public string Processors { get; set; }
        [Required]
        public string Memory { get; set; }
        [Required]
        public string Storage { get; set; }
    }
}
