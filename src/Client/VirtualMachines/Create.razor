@page "/virtual-machine/add"
@using Blazored.FluentValidation
@layout NoGlobalSearchLayout
@attribute [Authorize(Roles = "Master, Administrator")]

<PageTitle>Virtuele machine toevoegen</PageTitle>

@if (FetchingResources)
{
    <Loading />
}
else
{
    <EditForm OnValidSubmit="@HandleValidSubmit" Model="@VirtualMachine">
        <FluentValidationValidator />
        <TopBar>
            <ButtonGroup>
                <FormHeader Icon="fa-solid fa-desktop" Text="Virtuele machine toevoegen" />
            </ButtonGroup>
            <span class="outline-end">
                <button class="button" type="submit">Toevoegen</button>
            </span>
        </TopBar>
        <ThreeColumnLayout>
            <OneWidth>
                <Title Text="Configuratie" />

                <LabelInput Label="Naam"
                        Required="@true"
                        @bind-Value="VirtualMachine.Name"
                        For="@(() => VirtualMachine.Name)"
                        TestValue="WebServer 1" />

                <LabelInput Label="FQDN"
                        Required="@true"
                        @bind-Value="VirtualMachine.Fqdn"
                        For="@(() => VirtualMachine.Fqdn)"
                        TestValue="vic-devops-eu-webserver-1" />

                <DropDown Label="Mode"
                      Required="@true"
                      Options="@MakeModeItems()"
                      OnChange="@SetMode">
                    <ValidationMessage For=@(() => VirtualMachine.Mode) />
                </DropDown>

                <DropDown Label="Template"
                      Required="@true"
                      Options="@MakeTemplateItems()"
                      OnChange="@SetTemplate">
                    <ValidationMessage For=@(() => VirtualMachine.Template) />
                </DropDown>

                <LabelInput Label="Reden"
                        Required="@true"
                        @bind-Value="VirtualMachine.Reason"
                        For="@(() => VirtualMachine.Reason)"
                        TestValue="Bachelorproef" />

                <DropDown Label="Status"
                      Required="@true"
                      Options="@MakeStatusItems()"
                      OnChange="@SetStatus">
                    <ValidationMessage For=@(() => VirtualMachine.Status) />
                </DropDown>
                
                <Title Text="Poorten" />
                <DropDown Label="Poort" Options="@MakePortItems()" OnChange="@SetPortValue" />

                @if (selectedPorts is not null && selectedPorts.Any())
                {
                    <ButtonGroup>
                        @foreach (var port in selectedPorts)
                        {
                            <PortButton Text="@port.Service" OnClick="@(() => UnSelectPort(port))" />
                        }
                    </ButtonGroup>
                }
                else
                {
                    <NoResultsMessage Message="Geen poorten gekozen." InverseStyle=true />
                }

                <Checkbox Label="VPN" @bind-Value="VirtualMachine.hasVpnConnection" />

            </OneWidth>
            <OneWidth>
                <Title Text="Specificaties" />

                <DropDown Label="Host"
                      Required="@true"
                      Options="@MakeHostItems()"
                      OnChange="@SetHostValue">
                    <ValidationMessage For=@(() => VirtualMachine.HostId) />
                </DropDown>

                <LabelInputNumber Label="vCPUs"
                              Required="@true"
                              @bind-Value="@VirtualMachine.Specifications.VirtualProcessors"
                              For="@(()=>VirtualMachine.Specifications.VirtualProcessors)"
                              DefaultValue="1" />

                <LabelInputNumber Label="Geheugen"
                              Required="@true"
                              @bind-Value="@VirtualMachine.Specifications.Memory"
                              For="@(()=>VirtualMachine.Specifications.Memory)"
                              DefaultValue="1" />

                <LabelInputNumber Label="Opslag"
                              Required="@true"
                              @bind-Value="@VirtualMachine.Specifications.Storage"
                              For="@(()=>VirtualMachine.Specifications.Storage)"
                              DefaultValue="1" />
                
                <Title Text="Beschikbaarheid" />
                <CustomInputDate Label="Aangevraagd op" @bind-Value="@VirtualMachine.ApplicationDate" For="@(()=>VirtualMachine.ApplicationDate)" Required=true />
                <CustomInputDate Label="Start" @bind-Value="@VirtualMachine.StartDate" For="@(()=>VirtualMachine.StartDate)" Required=true />
                <CustomInputDate Label="Eind" @bind-Value="@VirtualMachine.EndDate" For="@(()=>VirtualMachine.EndDate)" Required=true />

                <DropDown Label="Beschikbaarheid"
                      Required="@true"
                      Options="@MakeAvailibilityItems()"
                      OnChange="@SetAvailabilityValue" />

                <div class="button-list">
                    @foreach (var item in chosenAvailabilities)
                    {
                        <PortButton Text="@item.ToString()" OnClick="@(() => RemoveAvailabilityFromList(item))" />
                    }
                </div>


                <Title Text="Back-ups" />
                <DropDown Label="Status" Options="@MakeBackUpFrequencyItems()" OnChange="@SetBackUpFrequency" />
                <ValidationMessage For=@(() => VirtualMachine.BackupFrequency) />
            </OneWidth>
            <OneWidth>
                <Title Text="Gebruikers"></Title>

                <DropDown Label="Aanvrager" Options="@MakeCustomerItems()" OnChange="@SetRequester" />
                <ValidationMessage For=@(() => VirtualMachine.RequesterId) />
                <DropDown Label="Gebruiker" Options="@MakeCustomerItems()" OnChange="@SetUser" />
                <ValidationMessage For=@(() => VirtualMachine.UserId) />

                <DropDown Label="Beheerder" Options="@MakeAccountItems()" OnChange="@SetAccount" />
                <ValidationMessage For=@(() => VirtualMachine.AdministratorId) />

                <Title Text="Logingegevens" />
                <EditForm Context="CredentialContext" OnValidSubmit="@AddCredential" Model="@newCredential">
                    <FluentValidationValidator />
                    <AddInput Type="Input.InputType.TEXT" Label="Gebruikersnaam" @bind-Value="newCredential.Username" For="@(()=> newCredential.Username)" Margin="true" />
                    <AddInput Type="Input.InputType.TEXT" Label="Rol" @bind-Value="newCredential.Role" For="@(()=> newCredential.Role)" Margin="true" />
                    <AddInput Type="Input.InputType.TEXT" Label="Wachtwoord" @bind-Value="newCredential.PasswordHash" For="@(()=> newCredential.PasswordHash)" Margin="true" />
                    <ButtonGroup>
                        <span class="outline-end">
                            <button class="button" type="submit">Toevoegen</button>
                        </span>
                    </ButtonGroup>
                </EditForm>


                @foreach (var c in credentialList)
                {
                    Dictionary<string, string> entry = new() { { "Username", c.Username }, { "Role", c.Role }, { "Passwordhash", c.PasswordHash } };
                    <DataCard Entries="@entry" customCss="@_customcss" />
                }
            </OneWidth>
        </ThreeColumnLayout>
    </EditForm>
}