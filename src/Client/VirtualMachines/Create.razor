@page "/virtual-machine/add"
@using Blazored.FluentValidation
@layout NoGlobalSearchLayout
@attribute [Authorize(Roles = "Master, Administrator")]

<PageTitle>Virtuele Machine Toevoegen</PageTitle>

<EditForm OnValidSubmit="@HandleValidSubmit" Model="@VirtualMachine">
    <FluentValidationValidator />
    <div class="context-menu">
        <span class="context-menu-label">
            <TitlePage IconString="desktop" Type="Virtuele Machine" Mutation="Toevoegen" />
        </span>
        <button type="submit">Toevoegen</button>
    </div>
    <div class="three-column-layout">
        <div class="one-third">
            <Title Text="Configuratie" />
            <RequiredInput Type="@Input.InputType.TEXT" Label="Naam" @bind-Value="VirtualMachine.Name" For="@(()=>VirtualMachine.Name)" />
            <RequiredInput Type="@Input.InputType.TEXT" Label="FQDN" @bind-Value="VirtualMachine.Fqdn" For="@(()=>VirtualMachine.Fqdn)" />

            <CustomDropDown Label="Mode" Items="@MakeModeItems()" Action="@SetModeValue" />
            <ValidationMessage For=@(() => VirtualMachine.Status) />

            <CustomDropDown Label="Template" Items="@MakeTemplateItems()" Action="@SetTemplateValue" />
            <ValidationMessage For=@(() => VirtualMachine.Status) />



            <RequiredInput Type="@Input.InputType.TEXT" Label="Reden" @bind-Value="@VirtualMachine.Reason" For="@(()=>VirtualMachine.Reason)" />

            <CustomDropDown Label="Status" Items="@MakeStatusItems()" Action="@SetStatusValue" />
            <ValidationMessage For=@(() => VirtualMachine.Status) />

            <Title Text="Poorten" />

            <CustomDropDown Label="Poort" Items="@MakePortItems()" Action="@SetPortValue" />

            <div class="button-list">
                @foreach (var item in selectedPorts)
                {
                    <PortButton Text="@item.Service" OnClick="@(() => RemovePortFromList(item))" />
                }
            </div>

            <CustomCheckbox Label="VPN" @bind-Value="VirtualMachine.hasVpnConnection"></CustomCheckbox>


            <Title Text="Specificaties" />
            <CustomDropDown Label="Host" Items="@MakeHostItems()" Action="@SetHostValue" />
            <ValidationMessage For=@(() => VirtualMachine.HostId) />

            <CustomInputNumber Label="vCPUs" @bind-Value="@VirtualMachine.Specifications.VirtualProcessors" For="@(()=>VirtualMachine.Specifications.VirtualProcessors)" Required=true />
            <CustomInputNumber Label="Geheugen" @bind-Value="@VirtualMachine.Specifications.Memory" For="@(()=>VirtualMachine.Specifications.Memory)" Required=true />
            <CustomInputNumber Label="Opslag" @bind-Value="@VirtualMachine.Specifications.Storage" For="@(()=>VirtualMachine.Specifications.Storage)" Required=true />
        </div>
        <div class="one-third">
            <Title Text="Beschikbaarheid" />
            <CustomInputDate Label="Datum van aanvraag" @bind-Value="@VirtualMachine.ApplicationDate" For="@(()=>VirtualMachine.ApplicationDate)" Required=true />
            <CustomInputDate Label="Startdatum" @bind-Value="@VirtualMachine.StartDate" For="@(()=>VirtualMachine.StartDate)" Required=true />
            <CustomInputDate Label="Einddatum" @bind-Value="@VirtualMachine.EndDate" For="@(()=>VirtualMachine.EndDate)" Required=true />


            @*<EditForm Context="AvailabilityContext" OnValidSubmit="@AddAvailability" Model="@selectedAvailability">
            <AvailabilityOptionSelect customCss="@_customcss" />
            <div style="display:flex; width: 100%; justify-content: end; margin: var(--padding-sm) 0px">
            <button type="submit">Toevoegen</button>
            </div>


            </EditForm>
            @foreach(var availability in Availabilities){
            <AvailabilityOption DayOfWeek="Availability.Wednesday" PartOfDay="PartOfDay.FullDay" customCss="@_customcss" />
            }*@
            <CustomDropDown Label="Beschikbaarheden" Items="@MakeAvailibilityItems()" Action="@SetAvailabilityValue" />

            <div class="button-list">
                @foreach (var item in chosenAvailabilities)
                {
                    <PortButton Text="@item.ToString()" OnClick="@(() => RemoveAvailabilityFromList(item))" />
                }
            </div>


            <Title Text="Back-ups" />
            <CustomDropDown Label="Status" Items="@MakeBackUpFrequencyItems()" Action="@SetBackUpFrequencyValue" />
            <ValidationMessage For=@(() => VirtualMachine.BackupFrequency) />
            
        </div>

        <div class="one-third">
            <Title Text="Gebruikers"></Title>

            <CustomDropDown Label="Aanvrager" Items="@MakeCustomerItems()" Action="@SetRequesterValue" />
            <ValidationMessage For=@(() => VirtualMachine.RequesterId) />
            <CustomDropDown Label="Gebruiker" Items="@MakeCustomerItems()" Action="@SetUserValue" />
            <ValidationMessage For=@(() => VirtualMachine.UserId) />

            <CustomDropDown Label="Verantwoordelijke" Items="@MakeAccountItems()" Action="@SetAccountValue" />
            <ValidationMessage For=@(() => VirtualMachine.AdministratorId) />

            <Title Text="Logingegevens" />
            <EditForm Context="CredentialContext" OnValidSubmit="@AddCredential" Model="@newCredential">
                <FluentValidationValidator/>
                <AddInput Type="Input.InputType.TEXT" Label="Username" @bind-Value="newCredential.Username" For="@(()=> newCredential.Username)" Margin="true" />
                <AddInput Type="Input.InputType.TEXT" Label="Role" @bind-Value="newCredential.Role" For="@(()=> newCredential.Role)" Margin="true" />
                <AddInput Type="Input.InputType.TEXT" Label="PasswordHash" @bind-Value="newCredential.PasswordHash" For="@(()=> newCredential.PasswordHash)" Margin="true" />
                <button type="submit">Toevoegen</button>
            </EditForm>


            @foreach (var c in credentialList)
            {
                Dictionary<string, string> entry = new() { { "Username", c.Username }, { "Role", c.Role }, { "Passwordhash", c.PasswordHash } };
                <DataCard Entries="@entry" customCss="@_customcss" />
            }


        </div>


    </div>
</EditForm>







