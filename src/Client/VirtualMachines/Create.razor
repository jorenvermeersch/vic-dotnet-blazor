@page "/virtual-machine/add"
@using Blazored.FluentValidation
@layout NoGlobalSearchLayout
@attribute [Authorize(Roles = "Master, Administrator")]

<PageTitle>Virtuele machine toevoegen</PageTitle>

@if (FetchingResources)
{
    <Loading />
}
else
{
    <EditForm OnValidSubmit="@HandleValidSubmit" Model="@VirtualMachine">
        <FluentValidationValidator />
        <TopBar>
            <ButtonGroup>
                <FormHeader Icon="fa-solid fa-desktop" Text="Virtuele machine toevoegen" />
            </ButtonGroup>
            <span class="outline-end">
                <button class="button" type="submit">Toevoegen</button>
            </span>
        </TopBar>
        <ThreeColumnLayout>
            <OneWidth>
                <Title Text="Configuratie" />
                <RequiredInput Type="@Input.InputType.TEXT" Label="Naam" @bind-Value="VirtualMachine.Name" For="@(()=>VirtualMachine.Name)" />
                <RequiredInput Type="@Input.InputType.TEXT" Label="FQDN" @bind-Value="VirtualMachine.Fqdn" For="@(()=>VirtualMachine.Fqdn)" />

                <DropDown Label="Mode" Options="@MakeModeItems()" OnChange="@SetModeValue" />
                <ValidationMessage For=@(() => VirtualMachine.Mode) />

                <DropDown Label="Template" Options="@MakeTemplateItems()" OnChange="@SetTemplateValue" />
                <ValidationMessage For=@(() => VirtualMachine.Template) />

                <RequiredInput Type="@Input.InputType.TEXT" Label="Reden" @bind-Value="@VirtualMachine.Reason" For="@(()=>VirtualMachine.Reason)" />

                <DropDown Label="Status" Options="@MakeStatusItems()" OnChange="@SetStatusValue" />
                <ValidationMessage For=@(() => VirtualMachine.Status) />

                <Title Text="Poorten" />

                <DropDown Label="Poort" Options="@MakePortItems()" OnChange="@SetPortValue" />

                <div class="button-list">
                    @foreach (var item in selectedPorts)
                    {
                        <PortButton Text="@item.Service" OnClick="@(() => RemovePortFromList(item))" />
                    }
                </div>

                <Checkbox Label="VPN" @bind-Value="VirtualMachine.hasVpnConnection" />

            </OneWidth>
            <OneWidth>
                <Title Text="Specificaties" />
                <DropDown Label="Host" Options="@MakeHostItems()" OnChange="@SetHostValue" />
                <ValidationMessage For=@(() => VirtualMachine.HostId) />

                <CustomInputNumber Label="vCPUs" @bind-Value="@VirtualMachine.Specifications.VirtualProcessors" For="@(()=>VirtualMachine.Specifications.VirtualProcessors)" Required=true />
                <CustomInputNumber Label="Geheugen" @bind-Value="@VirtualMachine.Specifications.Memory" For="@(()=>VirtualMachine.Specifications.Memory)" Required=true />
                <CustomInputNumber Label="Opslag" @bind-Value="@VirtualMachine.Specifications.Storage" For="@(()=>VirtualMachine.Specifications.Storage)" Required=true />

                <Title Text="Beschikbaarheid" />
                <CustomInputDate Label="Aangevraagd op" @bind-Value="@VirtualMachine.ApplicationDate" For="@(()=>VirtualMachine.ApplicationDate)" Required=true />
                <CustomInputDate Label="Start" @bind-Value="@VirtualMachine.StartDate" For="@(()=>VirtualMachine.StartDate)" Required=true />
                <CustomInputDate Label="Eind" @bind-Value="@VirtualMachine.EndDate" For="@(()=>VirtualMachine.EndDate)" Required=true />

                <DropDown Label="Beschikbaarheid" Items="@MakeAvailibilityItems()" OnChange="@SetAvailabilityValue" />

                <div class="button-list">
                    @foreach (var item in chosenAvailabilities)
                    {
                        <PortButton Text="@item.ToString()" OnClick="@(() => RemoveAvailabilityFromList(item))" />
                    }
                </div>


                <Title Text="Back-ups" />
                <DropDown Label="Status" Options="@MakeBackUpFrequencyItems()" OnChange="@SetBackUpFrequencyValue" />
                <ValidationMessage For=@(() => VirtualMachine.BackupFrequency) />
            </OneWidth>
            <OneWidth>
                <Title Text="Gebruikers"></Title>

                <DropDown Label="Aanvrager" Options="@MakeCustomerItems()" OnChange="@SetRequesterValue" />
                <ValidationMessage For=@(() => VirtualMachine.RequesterId) />
                <DropDown Label="Gebruiker" Options="@MakeCustomerItems()" OnChange="@SetUserValue" />
                <ValidationMessage For=@(() => VirtualMachine.UserId) />

                <DropDown Label="Beheerder" Options="@MakeAccountItems()" Action="@SetAccountValue" />
                <ValidationMessage For=@(() => VirtualMachine.AdministratorId) />

                <Title Text="Logingegevens" />
                <EditForm Context="CredentialContext" OnValidSubmit="@AddCredential" Model="@newCredential">
                    <FluentValidationValidator />
                    <AddInput Type="Input.InputType.TEXT" Label="Gebruikersnaam" @bind-Value="newCredential.Username" For="@(()=> newCredential.Username)" Margin="true" />
                    <AddInput Type="Input.InputType.TEXT" Label="Rol" @bind-Value="newCredential.Role" For="@(()=> newCredential.Role)" Margin="true" />
                    <AddInput Type="Input.InputType.TEXT" Label="Wachtwoord" @bind-Value="newCredential.PasswordHash" For="@(()=> newCredential.PasswordHash)" Margin="true" />
                    <ButtonGroup>
                        <span class="outline-end">
                            <button class="button" type="submit">Toevoegen</button>
                        </span>
                    </ButtonGroup>
                </EditForm>


                @foreach (var c in credentialList)
                {
                    Dictionary<string, string> entry = new() { { "Username", c.Username }, { "Role", c.Role }, { "Passwordhash", c.PasswordHash } };
                    <DataCard Entries="@entry" customCss="@_customcss" />
                }
            </OneWidth>
        </ThreeColumnLayout>
    </EditForm>
}